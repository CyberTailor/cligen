/* Generated by the Nim Compiler v1.9.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI687865870 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI939524174 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI939524180 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555171 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555178 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555175 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555176 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555176 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555176.node = NNI33555176;
NTI33555178.base = NTI33555175;
NTI33555179.base = NTI33555175;
var NNI33555175 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555178, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555179, name: "up", sons: null}]};
NTI33555175.node = NNI33555175;
var NNI33555171 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555171.node = NNI33555171;
NTI33555175.base = NTI33555171;
NTI33555176.base = NTI33555175;
NTI134217741.base = NTI33555176;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555176;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555176;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555176;
var NNI939524180 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI939524174, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI939524180.node = NNI939524180;
var NNI687865870 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554466, name: "Field1", sons: null}]};
NTI687865870.node = NNI687865870;

function mnewString(len_33556826) {
        return new Array(len_33556826);
  

  
}

function toJSStr(s_33556737) {
  var result_33556738 = null;

    var res_33556772 = newSeq_33556755((s_33556737).length);
    var i_33556773 = 0;
    var j_33556774 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556773 < (s_33556737).length)) break Label2;
          var c_33556775 = s_33556737[i_33556773];
          if ((c_33556775 < 128)) {
          res_33556772[j_33556774] = String.fromCharCode(c_33556775);
          i_33556773 += 1;
          }
          else {
            var helper_33556788 = newSeq_33556755(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556789 = c_33556775.toString(16);
                  if ((((code_33556789) == null ? 0 : (code_33556789).length) == 1)) {
                  helper_33556788.push("%0");;
                  }
                  else {
                  helper_33556788.push("%");;
                  }
                  
                  helper_33556788.push(code_33556789);;
                  i_33556773 += 1;
                  if ((((s_33556737).length <= i_33556773) || (s_33556737[i_33556773] < 128))) {
                  break Label3;
                  }
                  
                  c_33556775 = s_33556737[i_33556773];
                }
            };
++excHandler;
            try {
            res_33556772[j_33556774] = decodeURIComponent(helper_33556788.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556772[j_33556774] = helper_33556788.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556774 += 1;
        }
    };
    if (res_33556772.length < j_33556774) { for (var i = res_33556772.length ; i < j_33556774 ; ++i) res_33556772.push(null); }
               else { res_33556772.length = j_33556774; };
    result_33556738 = res_33556772.join("");

  return result_33556738;

}

function raiseException(e_33556597, ename_33556598) {
    e_33556597.name = ename_33556598;
    if ((excHandler == 0)) {
    unhandledException(e_33556597);
    }
    
    throw e_33556597;

  
}

function addInt(a_33556873, b_33556874) {
        var result = a_33556873 + b_33556874;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557122, a_33557123, b_33557124) {
  var result_33557125 = 0;

  BeforeRet: {
    if (((a_33557123 <= i_33557122) && (i_33557122 <= b_33557124))) {
    result_33557125 = i_33557122;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557125;

}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557073, src_33557074, ti_33557075) {
  var result_33557084 = null;

    switch (ti_33557075.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557064(ti_33557075))) {
      result_33557084 = src_33557074;
      }
      else {
        result_33557084 = [src_33557074[0], src_33557074[1]];
      }
      
      break;
    case 19:
            if (dest_33557073 === null || dest_33557073 === undefined) {
        dest_33557073 = {};
      }
      else {
        for (var key in dest_33557073) { delete dest_33557073[key]; }
      }
      for (var key in src_33557074) { dest_33557073[key] = src_33557074[key]; }
      result_33557084 = dest_33557073;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557075.base == null))) {
      result_33557084 = nimCopy(dest_33557073, src_33557074, ti_33557075.base);
      }
      else {
      if ((ti_33557075.kind == 17)) {
      result_33557084 = (dest_33557073 === null || dest_33557073 === undefined) ? {m_type: ti_33557075} : dest_33557073;
      }
      else {
        result_33557084 = (dest_33557073 === null || dest_33557073 === undefined) ? {} : dest_33557073;
      }
      }
      nimCopyAux(result_33557084, src_33557074, ti_33557075.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557074)) { 
        if(dest_33557073 === null || dest_33557073 === undefined || dest_33557073.length != src_33557074.length) {
          dest_33557073 = new src_33557074.constructor(src_33557074);
        } else {
          dest_33557073.set(src_33557074, 0);
        }
        result_33557084 = dest_33557073;
      } else {
        if (src_33557074 === null) {
          result_33557084 = null;
        }
        else {
          if (dest_33557073 === null || dest_33557073 === undefined || dest_33557073.length != src_33557074.length) {
            dest_33557073 = new Array(src_33557074.length);
          }
          result_33557084 = dest_33557073;
          for (var i = 0; i < src_33557074.length; ++i) {
            result_33557084[i] = nimCopy(result_33557084[i], src_33557074[i], ti_33557075.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557074 === null) {
        result_33557084 = null;
      }
      else {
        if (dest_33557073 === null || dest_33557073 === undefined || dest_33557073.length != src_33557074.length) {
          dest_33557073 = new Array(src_33557074.length);
        }
        result_33557084 = dest_33557073;
        for (var i = 0; i < src_33557074.length; ++i) {
          result_33557084[i] = nimCopy(result_33557084[i], src_33557074[i], ti_33557075.base);
        }
      }
    
      break;
    case 28:
            if (src_33557074 !== null) {
        result_33557084 = src_33557074.slice(0);
      }
    
      break;
    default: 
      result_33557084 = src_33557074;
      break;
    }

  return result_33557084;

}

function chckIndx(i_33557117, a_33557118, b_33557119) {
  var result_33557120 = 0;

  BeforeRet: {
    if (((a_33557118 <= i_33557117) && (i_33557117 <= b_33557119))) {
    result_33557120 = i_33557117;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557117, a_33557118, b_33557119);
    }
    
  };

  return result_33557120;

}

function makeNimstrLit(c_33556731) {
      var result = [];
  for (var i = 0; i < c_33556731.length; ++i) {
    result[i] = c_33556731.charCodeAt(i);
  }
  return result;
  

  
}

function subInt(a_33556877, b_33556878) {
        var result = a_33556877 - b_33556878;
    checkOverflowInt(result);
    return result;
  

  
}

function cstrToNimstr(c_33556734) {
      var ln = c_33556734.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556734.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556734.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
var ConstSet2 = setConstr([65, 90]);
var ConstSet3 = setConstr(95, 32, 46);
var ConstSet4 = setConstr(95, 32, 46);

function mulInt(a_33556881, b_33556882) {
        var result = a_33556881 * b_33556882;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet5 = setConstr([97, 122]);
var ConstSet6 = setConstr([65, 90], [97, 122]);
var ConstSet7 = setConstr([97, 122]);
var ConstSet8 = setConstr([65, 90]);
var ConstSet9 = setConstr([65, 90], [97, 122]);

function nimMax(a_33556931, b_33556932) {
    var Temporary1;

  var result_33556933 = 0;

  BeforeRet: {
    if ((b_33556932 <= a_33556931)) {
    Temporary1 = a_33556931;
    }
    else {
    Temporary1 = b_33556932;
    }
    
    result_33556933 = Temporary1;
    break BeforeRet;
  };

  return result_33556933;

}

function nimMin(a_33556927, b_33556928) {
    var Temporary1;

  var result_33556929 = 0;

  BeforeRet: {
    if ((a_33556927 <= b_33556928)) {
    Temporary1 = a_33556927;
    }
    else {
    Temporary1 = b_33556928;
    }
    
    result_33556929 = Temporary1;
    break BeforeRet;
  };

  return result_33556929;

}

function addChar(x_33557188, c_33557189) {
    x_33557188.push(c_33557189);

  
}
var objectID_1174405284 = [0];

function setTheme(theme_536870918) {
    document.documentElement.setAttribute("data-theme", theme_536870918);
    window.localStorage.setItem("theme", theme_536870918);

  
}
var Temporary1;
var t_536870937 = window.localStorage.getItem("theme");
if ((t_536870937 == null)) {
Temporary1 = "auto";
}
else {
Temporary1 = t_536870937;
}

setTheme(Temporary1);

function add_33556385(x_33556386, x_33556386_Idx, y_33556387) {
          if (x_33556386[x_33556386_Idx] === null) { x_33556386[x_33556386_Idx] = []; }
      var off = x_33556386[x_33556386_Idx].length;
      x_33556386[x_33556386_Idx].length += y_33556387.length;
      for (var i = 0; i < y_33556387.length; ++i) {
        x_33556386[x_33556386_Idx][off+i] = y_33556387.charCodeAt(i);
      }
    

  
}

function newSeq_33556755(len_33556757) {
  var result_33556758 = [];

    result_33556758 = new Array(len_33556757); for (var i = 0 ; i < len_33556757 ; ++i) { result_33556758[i] = null; }
  return result_33556758;

}

function unhandledException(e_33556593) {
    var buf_33556594 = [[]];
    if (!(((e_33556593.message).length == 0))) {
    buf_33556594[0].push.apply(buf_33556594[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556594[0].push.apply(buf_33556594[0], e_33556593.message);;
    }
    else {
    buf_33556594[0].push.apply(buf_33556594[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556594[0].push.apply(buf_33556594[0], [32,91]);;
    add_33556385(buf_33556594, 0, e_33556593.name);
    buf_33556594[0].push.apply(buf_33556594[0], [93,10]);;
    var cbuf_33556595 = toJSStr(buf_33556594[0]);
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556595);
  }
  else {
    throw cbuf_33556595;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556871) {
        if (a_33556871 > 2147483647 || a_33556871 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_285212850(result_285212852, result_285212852_Idx, x_285212853, start_285212854, n_285212855) {
    var Temporary1;

    var old_285212856 = (result_285212852[result_285212852_Idx]).length;
    if (result_285212852[result_285212852_Idx].length < (Temporary1 = chckRange(addInt(old_285212856, n_285212855), 0, 2147483647), Temporary1)) { for (var i = result_285212852[result_285212852_Idx].length; i < Temporary1; ++i) result_285212852[result_285212852_Idx].push(0); }
         else {result_285212852[result_285212852_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_285212870 = 0;
      var i_536871011 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_536871011 < n_285212855)) break Label4;
            iHEX60gensym4_285212870 = i_536871011;
            result_285212852[result_285212852_Idx][chckIndx(addInt(old_285212856, iHEX60gensym4_285212870), 0, (result_285212852[result_285212852_Idx]).length - 1)] = x_285212853.charCodeAt(chckIndx(addInt(start_285212854, iHEX60gensym4_285212870), 0, (x_285212853).length - 1));
            i_536871011 = addInt(i_536871011, 1);
          }
      };
    };

  
}

function addChars_285212846(result_285212848, result_285212848_Idx, x_285212849) {
    addChars_285212850(result_285212848, result_285212848_Idx, x_285212849, 0, ((x_285212849) == null ? 0 : (x_285212849).length));

  
}

function addInt_285212871(result_285212872, result_285212872_Idx, x_285212873) {
    addChars_285212846(result_285212872, result_285212872_Idx, ((x_285212873) + ""));

  
}

function addInt_285212892(result_285212893, result_285212893_Idx, x_285212894) {
    addInt_285212871(result_285212893, result_285212893_Idx, x_285212894);

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

    addInt_285212892(result_369098762, 0, x_369098761);

  return result_369098762[0];

}

function isFatPointer_33557064(ti_33557065) {
  var result_33557066 = false;

  BeforeRet: {
    result_33557066 = !((ConstSet1[ti_33557065.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557066;

}

function nimCopyAux(dest_33557077, src_33557078, n_33557079) {
    switch (n_33557079.kind) {
    case 0:
      break;
    case 1:
            dest_33557077[n_33557079.offset] = nimCopy(dest_33557077[n_33557079.offset], src_33557078[n_33557079.offset], n_33557079.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557079.sons.length; i++) {
      nimCopyAux(dest_33557077, src_33557078, n_33557079.sons[i]);
    }
    
      break;
    case 3:
            dest_33557077[n_33557079.offset] = nimCopy(dest_33557077[n_33557079.offset], src_33557078[n_33557079.offset], n_33557079.typ);
      for (var i = 0; i < n_33557079.sons.length; ++i) {
        nimCopyAux(dest_33557077, src_33557078, n_33557079.sons[i][1]);
      }
    
      break;
    }

  
}

function raiseIndexError(i_33556684, a_33556685, b_33556686) {
    var Temporary1;

    if ((b_33556686 < a_33556685)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_369098760(i_33556684) || [],[32,110,111,116,32,105,110,32] || [],HEX24_369098760(a_33556685) || [],[32,46,46,32] || [],HEX24_369098760(b_33556686) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function raiseAssert_251658262(msg_251658263) {
    raiseException({message: nimCopy(null, msg_251658263, NTI33554449), parent: null, m_type: NTI134217745, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function failedAssertImpl_251658292(msg_251658293) {
    raiseAssert_251658262(msg_251658293);

  
}

function onDOMLoaded(e_536870939) {
            
function HEX3Aanonymous_536870963(event_536870964) {
                event_536870964.target.parentNode.style.display = "none";
                event_536870964.target.parentNode.nextSibling.style.display = "inline";

              
            }

    document.getElementById("theme-select").value = window.localStorage.getItem("theme");
    Label1: {
      var pragmaDots_536870962 = null;
      var colontmp__536871002 = [];
      colontmp__536871002 = document.getElementsByClassName("pragmadots");
      var i_536871004 = 0;
      var L_536871005 = (colontmp__536871002).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871004 < L_536871005)) break Label3;
            pragmaDots_536870962 = colontmp__536871002[chckIndx(i_536871004, 0, (colontmp__536871002).length - 1)];
            pragmaDots_536870962.onclick = HEX3Aanonymous_536870963;
            i_536871004 = addInt(i_536871004, 1);
            if (!(((colontmp__536871002).length == L_536871005))) {
            failedAssertImpl_251658292(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}
var alternative_536871501 = [null];

function isWhitespace_536871247(x_536871248) {
  var result_536871249 = false;

    result_536871249 = (((x_536871248.nodeName == "#text") && !/\S/.test(x_536871248.textContent)) || (x_536871248.nodeName == "#comment"));

  return result_536871249;

}

function toToc_536871250(x_536871251, father_536871252) {
                var Temporary5;
            var Temporary6;
            var Temporary7;
            var Temporary8;
      var Temporary15;

    if ((x_536871251.nodeName == "UL")) {
    var f_536871260 = {heading: null, kids: [], sortId: (father_536871252.kids).length, doSort: false};
    var i_536871261 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_536871261 < x_536871251.childNodes.length)) break Label2;
          var nxt_536871262 = addInt(i_536871261, 1);
          Label3: {
              Label4: while (true) {
                if (!(nxt_536871262 < x_536871251.childNodes.length)) Temporary5 = false; else {                  Temporary5 = isWhitespace_536871247(x_536871251.childNodes[nxt_536871262]);                }              if (!Temporary5) break Label4;
                nxt_536871262 = addInt(nxt_536871262, 1);
              }
          };
            if (!(nxt_536871262 < x_536871251.childNodes.length)) Temporary8 = false; else {              Temporary8 = (x_536871251.childNodes[i_536871261].nodeName == "LI");            }            if (!Temporary8) Temporary7 = false; else {              Temporary7 = (x_536871251.childNodes[i_536871261].childNodes.length == 1);            }            if (!Temporary7) Temporary6 = false; else {              Temporary6 = (x_536871251.childNodes[nxt_536871262].nodeName == "UL");            }          if (Temporary6) {
          var e_536871275 = {heading: x_536871251.childNodes[i_536871261].childNodes[0], kids: [], sortId: (f_536871260.kids).length, doSort: false};
          var it_536871276 = x_536871251.childNodes[nxt_536871262];
          Label9: {
            var j_536871281 = 0;
            var colontmp__536871539 = 0;
            colontmp__536871539 = it_536871276.childNodes.length;
            var i_536871540 = 0;
            Label10: {
                Label11: while (true) {
                if (!(i_536871540 < colontmp__536871539)) break Label11;
                  j_536871281 = i_536871540;
                  toToc_536871250(it_536871276.childNodes[j_536871281], e_536871275);
                  i_536871540 = addInt(i_536871540, 1);
                }
            };
          };
          f_536871260.kids.push(e_536871275);;
          i_536871261 = addInt(nxt_536871262, 1);
          }
          else {
            toToc_536871250(x_536871251.childNodes[i_536871261], f_536871260);
            i_536871261 = addInt(i_536871261, 1);
          }
          
        }
    };
    father_536871252.kids.push(f_536871260);;
    }
    else {
    if (isWhitespace_536871247(x_536871251)) {
    }
    else {
    if ((x_536871251.nodeName == "LI")) {
    var idx_536871299 = [];
    Label12: {
      var i_536871304 = 0;
      var colontmp__536871543 = 0;
      colontmp__536871543 = x_536871251.childNodes.length;
      var i_536871544 = 0;
      Label13: {
          Label14: while (true) {
          if (!(i_536871544 < colontmp__536871543)) break Label14;
            i_536871304 = i_536871544;
            if (!(isWhitespace_536871247(x_536871251.childNodes[i_536871304]))) {
            idx_536871299.push(i_536871304);;
            }
            
            i_536871544 = addInt(i_536871544, 1);
          }
      };
    };
      if (!((idx_536871299).length == 2)) Temporary15 = false; else {        Temporary15 = (x_536871251.childNodes[idx_536871299[chckIndx(1, 0, (idx_536871299).length - 1)]].nodeName == "UL");      }    if (Temporary15) {
    var e_536871320 = {heading: x_536871251.childNodes[idx_536871299[chckIndx(0, 0, (idx_536871299).length - 1)]], kids: [], sortId: (father_536871252.kids).length, doSort: false};
    var it_536871321 = x_536871251.childNodes[idx_536871299[chckIndx(1, 0, (idx_536871299).length - 1)]];
    Label16: {
      var j_536871326 = 0;
      var colontmp__536871547 = 0;
      colontmp__536871547 = it_536871321.childNodes.length;
      var i_536871548 = 0;
      Label17: {
          Label18: while (true) {
          if (!(i_536871548 < colontmp__536871547)) break Label18;
            j_536871326 = i_536871548;
            toToc_536871250(it_536871321.childNodes[j_536871326], e_536871320);
            i_536871548 = addInt(i_536871548, 1);
          }
      };
    };
    father_536871252.kids.push(e_536871320);;
    }
    else {
      Label19: {
        var i_536871335 = 0;
        var colontmp__536871551 = 0;
        colontmp__536871551 = x_536871251.childNodes.length;
        var i_536871552 = 0;
        Label20: {
            Label21: while (true) {
            if (!(i_536871552 < colontmp__536871551)) break Label21;
              i_536871335 = i_536871552;
              toToc_536871250(x_536871251.childNodes[i_536871335], father_536871252);
              i_536871552 = addInt(i_536871552, 1);
            }
        };
      };
    }
    
    }
    else {
    father_536871252.kids.push({heading: x_536871251, kids: [], sortId: (father_536871252.kids).length, doSort: false});;
    }
    }}

  
}

function extractItems_536871084(x_536871085, heading_536871086, items_536871087, items_536871087_Idx) {
  BeforeRet: {
    if ((x_536871085 == null)) {
    break BeforeRet;
    }
    
    if ((!((x_536871085.heading == null)) && (x_536871085.heading.textContent == heading_536871086))) {
    Label1: {
      var i_536871104 = 0;
      var colontmp__536871555 = 0;
      colontmp__536871555 = (x_536871085.kids).length;
      var i_536871556 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871556 < colontmp__536871555)) break Label3;
            i_536871104 = i_536871556;
            items_536871087[items_536871087_Idx].push(x_536871085.kids[chckIndx(i_536871104, 0, (x_536871085.kids).length - 1)].heading);;
            i_536871556 = addInt(i_536871556, 1);
          }
      };
    };
    }
    else {
      Label4: {
        var k_536871130 = null;
        var i_536871560 = 0;
        var L_536871561 = (x_536871085.kids).length;
        Label5: {
            Label6: while (true) {
            if (!(i_536871560 < L_536871561)) break Label6;
              k_536871130 = x_536871085.kids[chckIndx(i_536871560, 0, (x_536871085.kids).length - 1)];
              extractItems_536871084(k_536871130, heading_536871086, items_536871087, items_536871087_Idx);
              i_536871560 = addInt(i_536871560, 1);
              if (!(((x_536871085.kids).length == L_536871561))) {
              failedAssertImpl_251658292(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    }
    
  };

  
}

function tree_536871015(tag_536871016, kids_536871017) {
  var result_536871018 = null;

    result_536871018 = document.createElement(tag_536871016);
    Label1: {
      var k_536871032 = null;
      var i_536871573 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871573 < (kids_536871017).length)) break Label3;
            k_536871032 = kids_536871017[chckIndx(i_536871573, 0, (kids_536871017).length - 1)];
            result_536871018.appendChild(k_536871032);
            i_536871573 = addInt(i_536871573, 1);
          }
      };
    };

  return result_536871018;

}

function text_536871040(s_536871041) {
  var result_536871042 = null;

    result_536871042 = document.createTextNode(s_536871041);

  return result_536871042;

}

function uncovered_536871401(x_536871402) {
    var Temporary1;

  var result_536871403 = null;

  BeforeRet: {
    if ((((x_536871402.kids).length == 0) && !((x_536871402.heading == null)))) {
    if (!(x_536871402.heading.hasOwnProperty('__karaxMarker__'))) {
    Temporary1 = x_536871402;
    }
    else {
    Temporary1 = null;
    }
    
    result_536871403 = Temporary1;
    break BeforeRet;
    }
    
    result_536871403 = {heading: x_536871402.heading, kids: [], sortId: x_536871402.sortId, doSort: x_536871402.doSort};
    Label2: {
      var k_536871418 = null;
      var i_536871580 = 0;
      var L_536871581 = (x_536871402.kids).length;
      Label3: {
          Label4: while (true) {
          if (!(i_536871580 < L_536871581)) break Label4;
            k_536871418 = x_536871402.kids[chckIndx(i_536871580, 0, (x_536871402.kids).length - 1)];
            var y_536871419 = uncovered_536871401(k_536871418);
            if (!((y_536871419 == null))) {
            result_536871403.kids.push(y_536871419);;
            }
            
            i_536871580 = addInt(i_536871580, 1);
            if (!(((x_536871402.kids).length == L_536871581))) {
            failedAssertImpl_251658292(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (((result_536871403.kids).length == 0)) {
    result_536871403 = null;
    }
    
  };

  return result_536871403;

}

function mergeTocs_536871431(orig_536871432, news_536871433) {
  var result_536871434 = null;

    result_536871434 = uncovered_536871401(orig_536871432);
    if ((result_536871434 == null)) {
    result_536871434 = news_536871433;
    }
    else {
      Label1: {
        var i_536871446 = 0;
        var colontmp__536871576 = 0;
        colontmp__536871576 = (news_536871433.kids).length;
        var i_536871577 = 0;
        Label2: {
            Label3: while (true) {
            if (!(i_536871577 < colontmp__536871576)) break Label3;
              i_536871446 = i_536871577;
              result_536871434.kids.push(news_536871433.kids[chckIndx(i_536871446, 0, (news_536871433.kids).length - 1)]);;
              i_536871577 = addInt(i_536871577, 1);
            }
        };
      };
    }
    

  return result_536871434;

}

function buildToc_536871451(orig_536871452, types_536871453, procs_536871454) {
  var result_536871455 = null;

    var newStuff_536871460 = {heading: null, kids: [], doSort: true, sortId: 0};
    Label1: {
      var t_536871464 = null;
      var i_536871568 = 0;
      var L_536871569 = (types_536871453).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871568 < L_536871569)) break Label3;
            t_536871464 = types_536871453[chckIndx(i_536871568, 0, (types_536871453).length - 1)];
            var c_536871469 = {heading: t_536871464.cloneNode(true), kids: [], doSort: true, sortId: 0};
            t_536871464.__karaxMarker__ = true;
            Label4: {
              var p_536871473 = null;
              var i_536871565 = 0;
              var L_536871566 = (procs_536871454).length;
              Label5: {
                  Label6: while (true) {
                  if (!(i_536871565 < L_536871566)) break Label6;
                    p_536871473 = procs_536871454[chckIndx(i_536871565, 0, (procs_536871454).length - 1)];
                    if (!(p_536871473.hasOwnProperty('__karaxMarker__'))) {
                    var xx_536871474 = p_536871473.parentNode.getElementsByClassName("attachedType");
                    if ((((xx_536871474).length == 1) && (xx_536871474[chckIndx(0, 0, (xx_536871474).length - 1)].textContent == t_536871464.textContent))) {
                    var q_536871479 = tree_536871015("A", [text_536871040(p_536871473.title)]);
                    q_536871479.setAttribute("href", p_536871473.getAttribute("href"));
                    c_536871469.kids.push({heading: q_536871479, kids: [], sortId: 0, doSort: false});;
                    p_536871473.__karaxMarker__ = true;
                    }
                    
                    }
                    
                    i_536871565 = addInt(i_536871565, 1);
                    if (!(((procs_536871454).length == L_536871566))) {
                    failedAssertImpl_251658292(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            newStuff_536871460.kids.push(c_536871469);;
            i_536871568 = addInt(i_536871568, 1);
            if (!(((types_536871453).length == L_536871569))) {
            failedAssertImpl_251658292(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_536871455 = mergeTocs_536871431(orig_536871452, newStuff_536871460);

  return result_536871455;

}

function add_536871033(parent_536871034, kid_536871035) {
    if (((parent_536871034.nodeName == "TR") && ((kid_536871035.nodeName == "TD") || (kid_536871035.nodeName == "TH")))) {
    var k_536871036 = document.createElement("TD");
    k_536871036.appendChild(kid_536871035);
    parent_536871034.appendChild(k_536871036);
    }
    else {
    parent_536871034.appendChild(kid_536871035);
    }
    

  
}

function setClass_536871037(e_536871038, value_536871039) {
    e_536871038.setAttribute("class", value_536871039);

  
}

function toHtml_536871149(x_536871150, isRoot_536871151) {
    
function HEX3Aanonymous_536871169(a_536871170, b_536871171) {
      var result_536871172 = 0;

      BeforeRet: {
        if ((!((a_536871170.heading == null)) && !((b_536871171.heading == null)))) {
        var x_536871181 = a_536871170.heading.textContent;
        var y_536871182 = b_536871171.heading.textContent;
        if ((x_536871181 < y_536871182)) {
        result_536871172 = -1;
        break BeforeRet;
        }
        
        if ((y_536871182 < x_536871181)) {
        result_536871172 = 1;
        break BeforeRet;
        }
        
        result_536871172 = 0;
        break BeforeRet;
        }
        else {
          result_536871172 = subInt(a_536871170.sortId, b_536871171.sortId);
          break BeforeRet;
        }
        
      };

      return result_536871172;

    }

  var result_536871152 = null;

  BeforeRet: {
    if ((x_536871150 == null)) {
    result_536871152 = null;
    break BeforeRet;
    }
    
    if (((x_536871150.kids).length == 0)) {
    if ((x_536871150.heading == null)) {
    result_536871152 = null;
    break BeforeRet;
    }
    
    result_536871152 = x_536871150.heading.cloneNode(true);
    break BeforeRet;
    }
    
    result_536871152 = tree_536871015("DIV", []);
    if ((!((x_536871150.heading == null)) && !(x_536871150.heading.hasOwnProperty('__karaxMarker__')))) {
    add_536871033(result_536871152, x_536871150.heading.cloneNode(true));
    }
    
    var ul_536871168 = tree_536871015("UL", []);
    if (isRoot_536871151) {
    setClass_536871037(ul_536871168, "simple simple-toc");
    }
    else {
    setClass_536871037(ul_536871168, "simple");
    }
    
    if (x_536871150.doSort) {
    x_536871150.kids.sort(HEX3Aanonymous_536871169);
    }
    
    Label1: {
      var k_536871194 = null;
      var i_536871584 = 0;
      var L_536871585 = (x_536871150.kids).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871584 < L_536871585)) break Label3;
            k_536871194 = x_536871150.kids[chckIndx(i_536871584, 0, (x_536871150.kids).length - 1)];
            var y_536871195 = toHtml_536871149(k_536871194, false);
            if (!((y_536871195 == null))) {
            add_536871033(ul_536871168, tree_536871015("LI", [y_536871195]));
            }
            
            i_536871584 = addInt(i_536871584, 1);
            if (!(((x_536871150.kids).length == L_536871585))) {
            failedAssertImpl_251658292(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (!((ul_536871168.childNodes.length == 0))) {
    add_536871033(result_536871152, ul_536871168);
    }
    
    if ((result_536871152.childNodes.length == 0)) {
    result_536871152 = null;
    }
    
  };

  return result_536871152;

}

function replaceById_536871043(id_536871044, newTree_536871045) {
    var x_536871046 = document.getElementById(id_536871044);
    x_536871046.parentNode.replaceChild(newTree_536871045, x_536871046);
    newTree_536871045.id = id_536871044;

  
}

function togglevis_536871502(d_536871503) {
    if ((d_536871503.style.display == "none")) {
    d_536871503.style.display = "inline";
    }
    else {
      d_536871503.style.display = "none";
    }
    

  
}

function groupBy(value_536871505) {
    var toc_536871506 = document.getElementById("toc-list");
    if ((alternative_536871501[0] == null)) {
    var tt_536871514 = {heading: null, kids: [], sortId: 0, doSort: false};
    toToc_536871250(toc_536871506, tt_536871514);
    tt_536871514 = tt_536871514.kids[chckIndx(0, 0, (tt_536871514.kids).length - 1)];
    var types_536871519 = [[]];
    var procs_536871524 = [[]];
    extractItems_536871084(tt_536871514, "Types", types_536871519, 0);
    extractItems_536871084(tt_536871514, "Procs", procs_536871524, 0);
    extractItems_536871084(tt_536871514, "Converters", procs_536871524, 0);
    extractItems_536871084(tt_536871514, "Methods", procs_536871524, 0);
    extractItems_536871084(tt_536871514, "Templates", procs_536871524, 0);
    extractItems_536871084(tt_536871514, "Macros", procs_536871524, 0);
    extractItems_536871084(tt_536871514, "Iterators", procs_536871524, 0);
    var ntoc_536871525 = buildToc_536871451(tt_536871514, types_536871519[0], procs_536871524[0]);
    var x_536871526 = toHtml_536871149(ntoc_536871525, true);
    alternative_536871501[0] = tree_536871015("DIV", [x_536871526]);
    }
    
    if ((value_536871505 == "type")) {
    replaceById_536871043("tocRoot", alternative_536871501[0]);
    }
    else {
    replaceById_536871043("tocRoot", tree_536871015("DIV", []));
    }
    
    togglevis_536871502(document.getElementById("toc-list"));

  
}
var db_536871587 = [[]];
var contents_536871588 = [[]];
var oldtoc_536871845 = [null];
var timer_536871846 = [null];
var loadIndexFut_536871848 = [null];

function HEX5BHEX5D_704644375(s_704644378, x_704644379) {
  var result_704644380 = [];

    var a_704644382 = x_704644379.a;
    var L_704644384 = addInt(subInt(subInt((s_704644378).length, x_704644379.b), a_704644382), 1);
    result_704644380 = nimCopy(null, mnewString(chckRange(L_704644384, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_704644389 = 0;
      var i_536871920 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871920 < L_704644384)) break Label3;
            i_704644389 = i_536871920;
            result_704644380[chckIndx(i_704644389, 0, (result_704644380).length - 1)] = s_704644378[chckIndx(addInt(i_704644389, a_704644382), 0, (s_704644378).length - 1)];
            i_536871920 = addInt(i_536871920, 1);
          }
      };
    };

  return result_704644380;

}

function HEX2EHEX2E_939524192(a_939524195, b_939524196) {
  var result_939524199 = ({a: 0, b: 0});

    result_939524199 = nimCopy(result_939524199, {a: a_939524195, b: b_939524196}, NTI939524180);

  return result_939524199;

}
async function loadIndex_536871722() {
  var result_536871724 = null;

  BeforeRet: {
    var indexURL_536871730 = document.getElementById("indexLink").getAttribute("href");
    var rootURL_536871756 = HEX5BHEX5D_704644375(cstrToNimstr(indexURL_536871730), HEX2EHEX2E_939524192(0, 14));
    var resp_536871768 = (await (await fetch(indexURL_536871730)).text());
    var indexElem_536871769 = document.createElement("div");
    indexElem_536871769.innerHTML = resp_536871768;
    Label1: {
      var href_536871791 = null;
      var colontmp__536871914 = [];
      colontmp__536871914 = indexElem_536871769.getElementsByClassName("reference");
      var i_536871916 = 0;
      var L_536871917 = (colontmp__536871914).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871916 < L_536871917)) break Label3;
            href_536871791 = colontmp__536871914[chckIndx(i_536871916, 0, (colontmp__536871914).length - 1)];
            href_536871791.setAttribute("href", toJSStr((rootURL_536871756 || []).concat(cstrToNimstr(href_536871791.getAttribute("href")) || [])));
            db_536871587[0].push(href_536871791);;
            contents_536871588[0].push(href_536871791.getAttribute("data-doc-search-tag"));;
            i_536871916 = addInt(i_536871916, 1);
            if (!(((colontmp__536871914).length == L_536871917))) {
            failedAssertImpl_251658292(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_536871724 = undefined;
    break BeforeRet;
  };

  return result_536871724;

}

function then_536871874(future_536871877, onSuccess_536871878, onReject_536871879) {
  var result_536871880 = null;

  BeforeRet: {
    var ret_536871890 = null;
    ret_536871890 = future_536871877.then(onSuccess_536871878, onReject_536871879)
    result_536871880 = ret_536871890;
    break BeforeRet;
  };

  return result_536871880;

}

function nsuToLowerAsciiChar(c_704643156) {
  var result_704643157 = 0;

    if ((ConstSet2[c_704643156] != undefined)) {
    result_704643157 = (c_704643156 ^ 32);
    }
    else {
      result_704643157 = c_704643156;
    }
    

  return result_704643157;

}

function fuzzyMatch_687865872(pattern_687865873, str_687865874) {
              var Temporary4;
              var Temporary5;
                var Temporary6;
      var Temporary7;
        var Temporary8;

  var result_687865877 = {Field0: 0, Field1: false};

    var scoreState_687865878 = -100;
    var headerMatched_687865879 = false;
    var unmatchedLeadingCharCount_687865880 = 0;
    var consecutiveMatchCount_687865881 = 0;
    var strIndex_687865882 = 0;
    var patIndex_687865883 = 0;
    var score_687865884 = 0;
    Label1: {
        Label2: while (true) {
        if (!((strIndex_687865882 < ((str_687865874) == null ? 0 : (str_687865874).length)) && (patIndex_687865883 < ((pattern_687865873) == null ? 0 : (pattern_687865873).length)))) break Label2;
          Label3: {
            var patternChar_687865887 = nsuToLowerAsciiChar(pattern_687865873.charCodeAt(chckIndx(patIndex_687865883, 0, (pattern_687865873).length - 1)));
            var strChar_687865888 = nsuToLowerAsciiChar(str_687865874.charCodeAt(chckIndx(strIndex_687865882, 0, (str_687865874).length - 1)));
            if ((ConstSet3[patternChar_687865887] != undefined)) {
            patIndex_687865883 = addInt(patIndex_687865883, 1);
            break Label3;
            }
            
            if ((ConstSet4[strChar_687865888] != undefined)) {
            strIndex_687865882 = addInt(strIndex_687865882, 1);
            break Label3;
            }
            
            if ((!(headerMatched_687865879) && (strChar_687865888 == 58))) {
            headerMatched_687865879 = true;
            scoreState_687865878 = -100;
            score_687865884 = ((Math.floor((0.5 * score_687865884))) | 0);
            patIndex_687865883 = 0;
            strIndex_687865882 = addInt(strIndex_687865882, 1);
            break Label3;
            }
            
            if ((strChar_687865888 == patternChar_687865887)) {
            switch (scoreState_687865878) {
            case -100:
            case 20:
              scoreState_687865878 = 10;
              break;
            case 0:
              scoreState_687865878 = 5;
              score_687865884 = addInt(score_687865884, scoreState_687865878);
              break;
            case 10:
            case 5:
              consecutiveMatchCount_687865881 = addInt(consecutiveMatchCount_687865881, 1);
              scoreState_687865878 = 5;
              score_687865884 = addInt(score_687865884, mulInt(5, consecutiveMatchCount_687865881));
              if ((scoreState_687865878 == 10)) {
              score_687865884 = addInt(score_687865884, 10);
              }
              
              var onBoundary_687865940 = (patIndex_687865883 == ((pattern_687865873) == null ? -1 : (pattern_687865873).length - 1));
              if ((!(onBoundary_687865940) && (strIndex_687865882 < ((str_687865874) == null ? -1 : (str_687865874).length - 1)))) {
              var nextPatternChar_687865941 = nsuToLowerAsciiChar(pattern_687865873.charCodeAt(chckIndx(addInt(patIndex_687865883, 1), 0, (pattern_687865873).length - 1)));
              var nextStrChar_687865942 = nsuToLowerAsciiChar(str_687865874.charCodeAt(chckIndx(addInt(strIndex_687865882, 1), 0, (str_687865874).length - 1)));
              if (!!((ConstSet5[nextStrChar_687865942] != undefined))) Temporary4 = false; else {                Temporary4 = !((nextStrChar_687865942 == nextPatternChar_687865941));              }              onBoundary_687865940 = Temporary4;
              }
              
              if (onBoundary_687865940) {
              scoreState_687865878 = 20;
              score_687865884 = addInt(score_687865884, scoreState_687865878);
              }
              
              break;
            case -1:
            case -3:
              if (!((ConstSet6[str_687865874.charCodeAt(chckIndx(subInt(strIndex_687865882, 1), 0, (str_687865874).length - 1))] != undefined))) Temporary5 = true; else {                if (!(ConstSet7[str_687865874.charCodeAt(chckIndx(subInt(strIndex_687865882, 1), 0, (str_687865874).length - 1))] != undefined)) Temporary6 = false; else {                  Temporary6 = (ConstSet8[str_687865874.charCodeAt(chckIndx(strIndex_687865882, 0, (str_687865874).length - 1))] != undefined);                }                Temporary5 = Temporary6;              }              var isLeadingChar_687865966 = Temporary5;
              if (isLeadingChar_687865966) {
              scoreState_687865878 = 10;
              }
              else {
                scoreState_687865878 = 0;
                score_687865884 = addInt(score_687865884, scoreState_687865878);
              }
              
              break;
            }
            patIndex_687865883 = addInt(patIndex_687865883, 1);
            }
            else {
              switch (scoreState_687865878) {
              case -100:
                scoreState_687865878 = -3;
                score_687865884 = addInt(score_687865884, scoreState_687865878);
                break;
              case 5:
                scoreState_687865878 = -1;
                score_687865884 = addInt(score_687865884, scoreState_687865878);
                consecutiveMatchCount_687865881 = 0;
                break;
              case -3:
                if ((unmatchedLeadingCharCount_687865880 < 3)) {
                scoreState_687865878 = -3;
                score_687865884 = addInt(score_687865884, scoreState_687865878);
                }
                
                unmatchedLeadingCharCount_687865880 = addInt(unmatchedLeadingCharCount_687865880, 1);
                break;
              default: 
                scoreState_687865878 = -1;
                score_687865884 = addInt(score_687865884, scoreState_687865878);
                break;
              }
            }
            
            strIndex_687865882 = addInt(strIndex_687865882, 1);
          };
        }
    };
      if (!(patIndex_687865883 == ((pattern_687865873) == null ? 0 : (pattern_687865873).length))) Temporary7 = false; else {        if ((strIndex_687865882 == ((str_687865874) == null ? 0 : (str_687865874).length))) Temporary8 = true; else {          Temporary8 = !((ConstSet9[str_687865874.charCodeAt(chckIndx(strIndex_687865882, 0, (str_687865874).length - 1))] != undefined));        }        Temporary7 = Temporary8;      }    if (Temporary7) {
    score_687865884 = addInt(score_687865884, 10);
    }
    
    var colontmp__536871934 = nimMax(0, score_687865884);
    var colontmp__536871935 = (0 < score_687865884);
    result_687865877 = nimCopy(result_687865877, {Field0: colontmp__536871934, Field1: colontmp__536871935}, NTI687865870);

  return result_687865877;

}

function escapeCString_536871589(x_536871590, x_536871590_Idx) {
    var s_536871591 = [];
    Label1: {
      var c_536871592 = 0;
      var iHEX60gensym6_536871938 = 0;
      var nHEX60gensym6_536871939 = ((x_536871590[x_536871590_Idx]) == null ? 0 : (x_536871590[x_536871590_Idx]).length);
      Label2: {
          Label3: while (true) {
          if (!(iHEX60gensym6_536871938 < nHEX60gensym6_536871939)) break Label3;
            c_536871592 = x_536871590[x_536871590_Idx].charCodeAt(chckIndx(iHEX60gensym6_536871938, 0, (x_536871590[x_536871590_Idx]).length - 1));
            switch (c_536871592) {
            case 60:
              s_536871591.push.apply(s_536871591, [38,108,116,59]);;
              break;
            case 62:
              s_536871591.push.apply(s_536871591, [38,103,116,59]);;
              break;
            default: 
              addChar(s_536871591, c_536871592);;
              break;
            }
            iHEX60gensym6_536871938 = addInt(iHEX60gensym6_536871938, 1);
          }
      };
    };
    x_536871590[x_536871590_Idx] = toJSStr(s_536871591);

  
}

function dosearch_536871593(value_536871594) {
    
function HEX3Aanonymous_536871620(a_536871625, b_536871626) {
      var result_536871631 = 0;

        result_536871631 = subInt(b_536871626["Field1"], a_536871625["Field1"]);

      return result_536871631;

    }

  var result_536871595 = null;

  BeforeRet: {
    if (((db_536871587[0]).length == 0)) {
    break BeforeRet;
    }
    
    var ul_536871599 = tree_536871015("UL", []);
    result_536871595 = tree_536871015("DIV", []);
    setClass_536871037(result_536871595, "search_results");
    var matches_536871604 = [];
    Label1: {
      var i_536871612 = 0;
      var colontmp__536871924 = 0;
      colontmp__536871924 = (db_536871587[0]).length;
      var i_536871925 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871925 < colontmp__536871924)) break Label3;
            i_536871612 = i_536871925;
            Label4: {
              var c_536871613 = contents_536871588[0][chckIndx(i_536871612, 0, (contents_536871588[0]).length - 1)];
              if (((c_536871613 == "Examples") || (c_536871613 == "PEG construction"))) {
              break Label4;
              }
              
              var colontmp__536871931 = fuzzyMatch_687865872(value_536871594, c_536871613);
              var score_536871614 = colontmp__536871931["Field0"];
              var matched_536871615 = colontmp__536871931["Field1"];
              if (matched_536871615) {
              matches_536871604.push({Field0: db_536871587[0][chckIndx(i_536871612, 0, (db_536871587[0]).length - 1)], Field1: score_536871614});;
              }
              
            };
            i_536871925 = addInt(i_536871925, 1);
          }
      };
    };
    matches_536871604.sort(HEX3Aanonymous_536871620);
    Label5: {
      var i_536871648 = 0;
      var colontmp__536871928 = 0;
      colontmp__536871928 = nimMin((matches_536871604).length, 29);
      var i_536871929 = 0;
      Label6: {
          Label7: while (true) {
          if (!(i_536871929 < colontmp__536871928)) break Label7;
            i_536871648 = i_536871929;
            matches_536871604[chckIndx(i_536871648, 0, (matches_536871604).length - 1)]["Field0"].innerHTML = matches_536871604[chckIndx(i_536871648, 0, (matches_536871604).length - 1)]["Field0"].getAttribute("data-doc-search-tag");
            escapeCString_536871589(matches_536871604[chckIndx(i_536871648, 0, (matches_536871604).length - 1)]["Field0"], "innerHTML");
            add_536871033(ul_536871599, tree_536871015("LI", [matches_536871604[chckIndx(i_536871648, 0, (matches_536871604).length - 1)]["Field0"]]));
            i_536871929 = addInt(i_536871929, 1);
          }
      };
    };
    if ((ul_536871599.childNodes.length == 0)) {
    add_536871033(result_536871595, tree_536871015("B", [text_536871040("no search results")]));
    }
    else {
      add_536871033(result_536871595, tree_536871015("B", [text_536871040("search results")]));
      add_536871033(result_536871595, ul_536871599);
    }
    
  };

  return result_536871595;

}

function search() {
    
function wrapper_536871859() {
        var elem_536871860 = document.getElementById("searchInput");
        var value_536871861 = elem_536871860.value;
        if (!((((value_536871861) == null ? 0 : (value_536871861).length) == 0))) {
        if ((oldtoc_536871845[0] == null)) {
        oldtoc_536871845[0] = document.getElementById("tocRoot");
        }
        
        var results_536871865 = dosearch_536871593(value_536871861);
        replaceById_536871043("tocRoot", results_536871865);
        }
        else {
        if (!((oldtoc_536871845[0] == null))) {
        replaceById_536871043("tocRoot", oldtoc_536871845[0]);
        }
        }

      
    }

    if ((loadIndexFut_536871848[0] == null)) {
    loadIndexFut_536871848[0] = loadIndex_536871722();
    var _ = then_536871874(loadIndexFut_536871848[0], wrapper_536871859, null);
    }
    
    if (!((timer_536871846[0] == null))) {
    clearTimeout(timer_536871846[0]);
    }
    
    timer_536871846[0] = setTimeout(wrapper_536871859, 400);

  
}

function copyToClipboard() {
    
    function updatePreTags() {

      const allPreTags = document.querySelectorAll("pre")
    
      allPreTags.forEach((e) => {
      
          const div = document.createElement("div")
          div.classList.add("copyToClipBoard")
    
          const preTag = document.createElement("pre")
          preTag.innerHTML = e.innerHTML
    
          const button = document.createElement("button")
          button.value = e.textContent.replace('...', '') 
          button.classList.add("copyToClipBoardBtn")
          button.style.cursor = "pointer"
    
          div.appendChild(preTag)
          div.appendChild(button)
    
          e.outerHTML = div.outerHTML
      
      })
    }


    function copyTextToClipboard(e) {
        const clipBoardContent = e.target.value
        navigator.clipboard.writeText(clipBoardContent).then(function() {
            e.target.style.setProperty("--clipboard-image", "var(--clipboard-image-selected)")
        }, function(err) {
            console.error("Could not copy text: ", err);
        });
    }

    window.addEventListener("click", (e) => {
        if (e.target.classList.contains("copyToClipBoardBtn")) {
            copyTextToClipboard(e)
          }
    })

    window.addEventListener("mouseover", (e) => {
        if (e.target.nodeName === "PRE") {
            e.target.nextElementSibling.style.setProperty("--clipboard-image", "var(--clipboard-image-normal)")
        }
    })
    
    window.addEventListener("DOMContentLoaded", updatePreTags)

    

  
}
copyToClipboard();
window.addEventListener("DOMContentLoaded", onDOMLoaded, false);
